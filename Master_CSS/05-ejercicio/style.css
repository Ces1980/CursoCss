/**
*!.-Ejercicio completo con HTML yCSS
* (Hecho)  1- Crear un docuemnto HTML y vincularlo con un CSS
* (Hecho)  2- Crear una estructura HTML que cuente con un CONTENEDOR GENERAL, CABECERA, MENU, BARRA LATERAL, SECCION DE CONTENIDO PRINCIPAL
     ELEMENTOS DENTRO DEL CONTENEDOR PRINCIPAL Y FOOTER
* (Hecho)  3- Todo el contenido debe estar dentro del contenedor general, su ancho sera de 1200px y estar centrado
* (Hecho)  4- Header debe ocupar el 100% del ancho y tener un texto grande centrado
* (Hecho)  5- Menu debe tener los elementos uno a lado del otro
* (Hecho)  6- El contenido principal debe tener un ancho del 70%
* (Hecho)  7- El contenido dentro del contenedor principal debe ser una cuadricula con cuatro lineas de dos cajas
* (Hecho)  8- La barra lateral debe tener un ancho del 30%
* 9- El footer debe tener un ancho del 100% del div que lo contiene y estar debajo del todo  
*/

* {
  margin: 0px;
  padding: 0px;
  text-decoration: none;
  font-family: Verdana, Geneva, Tahoma, sans-serif;
}

#general {
  /*  Ancho de la página */
  width: 1200px;
  /* Centra el contenido */
  margin: 0px auto;
  /* MArgen superior */
  margin-top: 20px;
  border: 1px solid #ccc;
}

#header {
  /* Ancho de la caja */
  width: 100%;
  /* Alto de la caja*/
  height: 100px;
  /* Color de la caja */
  background-color: blue;
  /* Color de las letras  */
  color: cornsilk;
  /* Alineación del texto */
  text-align: center;
  /* Alineación del contenido de la caja en forma vertical  */
  line-height: 90px;
}
/* Limpoar los espacios entre el menú y la section*/
.clearfix {
  float: none;
  clear: both;
}

#menu {
  background-color: #eeeeee;
}
/* DAndo estilo a los elementoss li que estan dentro del menú */
#menu ul li {
  /*Poner los elementos uno a lado del otro  display: inline-block;*/
  /* para que los elementos se conporten de forma independiente */
  display: block;
  /* Flota los elementos a la izquierda */
  float: left;
  /* Pinta los margens entre las cajas del menú */
  border-right: 1px solid #ccc;
}
#menu ul li a {
  display: block;
  /* MArgen interno de las cajas */
  padding: 15px;
  color: #444;
}
/* Uso de pseudoclae HOVER */
#menu ul li:hover {
  background-color: rgb(24, 24, 122);
  /* Pinta un cursor cuando se este sobre la caja del elemento del menu*/
  cursor: pointer;
}
#menu ul li:hover a {
  color: white;
}
/* Se flotan ambas cajas para poderlas ubicar la caja contenido y la caja lateral una a lado de la otra*/
#contenido {
  float: left;
  /* el ancho de la caja contenido debe de ser concordante con la caja de lateral en cuento a los ancho para que quepan en la misma linea
       69% de la cja de contenido + 30% de la caja lateral + 1% de los bordes que se le han dado a la caja*/
  width: 69%;
}

#lateral {
  float: left;
  width: 30%;
  border: 1px solid red;
  min-height: 500px;
  max-height: 650px;
  text-align: center;
  /* La propiedad CSS overflow  especifica: si recortar contenido, 
  dibujar barras de desplazamiento o mostrar el contenido excedente 
  en un elemento a nivel de bloque. */

  /* 
visible
    Valor por defecto. El contenido no es recortado, podría ser dibujado 
    fuera de la caja contenedora.
hidden
    El contenido es recortado y no se muestran barras de posición.
scroll
    El contenido es recortado y el navegador web usa las barras de desplazamiento, 
    se haya recortado contenido o no. Esto previene cualquier problema con las barras de desplazamiento apareciendo o desapareciendo en un entorno dinámico. Puede que las impresoras impriman contenido excedente.
auto
    Depende del agente de usuario. Navegadores de escritorio como
    Firefox proveen barras de desplazamiento si hay contenido excedente.  */
  overflow: auto;
}

#tituloAside {
  text-align: center;
}

#contenido > h1 {
  /* Centrado el titulo que se encuentra dentro de section */
  text-align: center;
  border-bottom: 1px solid #ccc;
  /* Margen interno */
  padding: 15px;
  color: #444;
  /* Sintaxis eje de las x | eje de las y | radio de desenfoque | color */
  text-shadow: 1px 1px 2px rgb(206, 199, 199);
}

#contenido .caja {
  position: relative;
  width: 40%;
  height: 250px;
  background-color: #ccc;
  border: 1px solid gray;
  color: white;
  /* Se flotan las cajas para ubicarlas */
  float: left;
  margin: 20px;
  /* Margen izquierdo de las cajas */
  margin-left: 40px;
  text-align: center;
  line-height: 200px;
  color: #444;
  text-transform: uppercase;
  /* Sobra de una caja */
  box-shadow: 5px 5px 10px gray;
  /* Boderar las esquinas de las cajas */
  border-radius: 5px;
}

.sombra-interior {
  /* Resaltadno la importancia para sobresescribir el box sadow de #contenido .caja*/
  box-shadow: 5px 5px 30px gray inset !important;
}

#footer {
  height: 55px;
  width: 100%;
  line-height: 55px;
  background-color: #eeeeee;
  text-align: center;
  color: #444;
  margin-right: 20px;
  border-top: 1px solid #ccc;
}

.libre{
  position: absolute;
  top:300px;
  left: 50%;

  border: 1px solid black;
  background-color: red;
  color: white;
  width: 50px;
  height: 50px;
  font-size: 13px;

}

/*La propiedad CSS z-index indica el orden de un elemento posicionado y 
sus descendientes. Cuando varios elementos se superponen, 
los elementos con mayor valor z-index cubren aquellos con menor valor.*/
.libre1{
  z-index: 2;
}

.libre2{
  background-color: green;
  top:280px;
  left: 55%;
  /* El sobreposicionamiento con z-index se lo da el valor numerico
  el que tenga el mayor valor es la caja que se mantendra en la parte superior */
  z-index: 1;
}